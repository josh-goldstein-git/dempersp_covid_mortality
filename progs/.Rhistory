##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
## > sort(round(theta_all.vec, 3))
##  FRATNP     USA GBRTENW     ESP     ITA  DEUTNP     KOR   WUHAN
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## > sort(round(theta_pretty, 3))
##  France     USA England   Spain   Italy Germany   Korea   Wuhan
##   0.997   1.000   1.036   1.051   1.067   1.098   1.160   1.162
## >
theta_all.vec = c(theta.vec, "WUHAN" = theta_wuhan)
theta_pretty = theta_all.vec
names(theta_pretty) = c("England", "France", "Germany",
"Italy", "Korea",   "Spain",
"USA", "Wuhan")
expos_usa = fread("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/USA.Exposures_1x1.txt")
expos_usa = fread("../data/raw/USA.Exposures_1x1.txt")
Age2x <- function(Age)
{
Age[Age == "110+"] <- "110"
x = as.numeric(Age)
return(x)
}
expos_usa = fread("../data/raw/USA.Exposures_1x1.txt")
expos_usa[, x := Age2x(Age)]
mort_usa = fread("~/Documents/hmd/hmd_statistics/death_rates/Mx_1x1/USA.Mx_1x1.txt")
mort_usa = fread("../data/raw/USA.Mx_1x1.txt")
mort_usa[, x := Age2x(Age)]
##
Mx_80p = mort_usa[Year == 2017 & x >= 80]$Total
names(Mx_80p) = mort_usa[Year == 2017 & x >= 80]$x
Kx_80p = expos_usa[Year == 2017 & x >= 80]$Total
cdr_80p = sum(Mx_80p * Kx_80p)/sum(Kx_80p)
## Now let's do Korea
expos_kor = fread("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/KOR.Exposures_1x1.txt")
## Now let's do Korea
expos_kor = fread("../data/raw/KOR.Exposures_1x1.txt")
expos_kor[, x := Age2x(Age)]
## Now let's do Korea
expos_kor = fread("../data/raw/KOR.Exposures_1x1.txt")
expos_kor[, x := Age2x(Age)]
mort_kor = fread("../data/raw/KOR.Mx_1x1.txt")
mort_kor[, x := Age2x(Age)]
## Now let's do Korea
expos_kor = fread("../data/raw/KOR.Exposures_1x1.txt")
expos_kor[, x := Age2x(Age)]
mort_kor = fread("../data/raw/KOR.Mx_1x1.txt")
## Now let's do Korea
expos_kor = fread("../data/raw/KOR.Exposures_1x1.txt")
expos_kor[, x := Age2x(Age)]
mort_kor = fread("../data/raw/KOR.Mx_1x1.txt")
mort_kor[, x := Age2x(Age)]
##
Mx_80p = mort_kor[Year == 2017 & x >= 80]$Total
names(Mx_80p) = mort_kor[Year == 2017 & x >= 80]$x
Kx_80p = expos_kor[Year == 2017 & x >= 80]$Total
kor_cdr_80p = sum(Mx_80p * Kx_80p)/sum(Kx_80p)
## [1] 0.08345613
## now get indirectly standardized
sMx_80p = mort_usa[Year == 2017 & x >= 80]$Total
names(sMx_80p) = mort_usa[Year == 2017 & x >= 80]$x
s_kor_cdr_80p = sum(sMx_80p * Kx_80p)/sum(Kx_80p)
## [1] 0.08394175
## a tiny bit higher, which means that the age structure of standard (USA) is a tiny bit older
## our adjusted rate would be multiply observed Korean Covid19 rate 80+ and multiply by adjustment factor
adj_factor_kor = s_kor_cdr_80p / kor_cdr_80p
## now let's do Italy
expos_ita = fread("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/ITA.Exposures_1x1.txt", na.string = ".")
## now let's do Italy
expos_ita = fread("../data/raw/ITA.Exposures_1x1.txt", na.string = ".")
expos_ita[, x := Age2x(Age)]
mort_ita = fread("~/Documents/hmd/hmd_statistics/death_rates/Mx_1x1/ITA.Mx_1x1.txt", na.string = ".")
## now let's do Italy
expos_ita = fread("../data/raw/ITA.Exposures_1x1.txt", na.string = ".")
expos_ita[, x := Age2x(Age)]
mort_ita = fread("~/Documents/hmd/hmd_statistics/death_rates/Mx_1x1/ITA.Mx_1x1.txt", na.string = ".")
mort_ita = fread("../data/raw/ITA.Mx_1x1.txt", na.string = ".")
mort_ita[, x := Age2x(Age)]
##
Mx_80p = mort_ita[Year == 2014 & x >= 80]$Total
names(Mx_80p) = mort_ita[Year == 2014 & x >= 80]$x
Kx_80p = expos_ita[Year == 2014 & x >= 80]$Total
ita_cdr_80p = sum(Mx_80p * Kx_80p)/sum(Kx_80p)
## [1] 0.09278272
## now get indirectly standardized
sMx_80p = mort_usa[Year == 2017 & x >= 80]$Total
names(sMx_80p) = mort_usa[Year == 2017 & x >= 80]$x
s_ita_cdr_80p = sum(sMx_80p * Kx_80p)/sum(Kx_80p)
## [1] 0.09231215
adj_factor_ita = s_ita_cdr_80p / ita_cdr_80p
s_ita_cdr_80p
adj_factor_ita
mort_wuhan = fread("../data/Wuhan_Kx.csv")
mort_wuhan = fread("../data/raw/Wuhan_Kx.csv")
wuhan_Kx = mort_wuhan$"Population Size"
names(wuhan_Kx) = mort_wuhan$Age
wuhan_Kx_80p = wuhan_Kx[paste(80:99)]
s = names(wuhan_Kx_80p)
usa_Kx_80p = expos_usa[Year == 2017 & x >= 80]$Total
names(usa_Kx_80p) = expos_usa[Year == 2017 & x >= 80]$x
s_cdr_wuhan = sum(wuhan_Kx_80p * sMx_80p[s]) / sum(wuhan_Kx_80p)
s_cdr_usa =   sum(usa_Kx_80p[s] * sMx_80p[s]) / sum(usa_Kx_80p[s])
s_cdr_wuhan/s_cdr_usa
theta_wuhan = s_cdr_usa/s_cdr_wuhan
theta_wuhan
s = paste(80:99)
par(mfrow = c(1,1))
code.vec = c("GBRTENW", "FRATNP", "DEUTNP", "ITA", "KOR", "ESP", "USA")
## expos_ita = fread("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/ITA.Exposures_1x1.txt", na.string = ".")
theta.vec = rep(NA, length(code.vec))
names(theta.vec) = code.vec
for (i in 1:length(code.vec))
{
this_code = code.vec[i]
this_filename = paste0("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/", this_code, ".Exposures_1x1.txt")
this_dt = fread(this_filename, na.string = ".")
this_dt[, x := Age2x(Age)]
this_Kx = this_dt[Year == max(Year) & x >= 80]$Total
names(this_Kx) = this_dt[Year == max(Year) & x >= 80]$x
this_cx = prop.table(this_Kx[s])
##     s = names(this_Kx)
##
usa_cx = prop.table(usa_Kx_80p[s])
if(i == 1)
plot(names(usa_cx), usa_cx, ylim = c(0, .17))
##
this_stan_cdr = sum(this_cx * sMx_80p[s])
usa_stan_cdr  = sum(usa_cx  * sMx_80p[s])
theta = usa_stan_cdr/this_stan_cdr
theta.vec[i] = theta
lines(names(this_cx), this_cx, col = i, lty = i)
}
s = paste(80:99)
par(mfrow = c(1,1))
code.vec = c("GBRTENW", "FRATNP", "DEUTNP", "ITA", "KOR", "ESP", "USA")
## expos_ita = fread("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/ITA.Exposures_1x1.txt", na.string = ".")
theta.vec = rep(NA, length(code.vec))
names(theta.vec) = code.vec
for (i in 1:length(code.vec))
{
this_code = code.vec[i]
this_filename = paste0("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/", this_code, ".Exposures_1x1.txt")
this_dt = fread(this_filename, na.string = ".")
this_dt[, x := Age2x(Age)]
this_Kx = this_dt[Year == max(Year) & x >= 80]$Total
names(this_Kx) = this_dt[Year == max(Year) & x >= 80]$x
this_cx = prop.table(this_Kx[s])
##     s = names(this_Kx)
##
usa_cx = prop.table(usa_Kx_80p[s])
if(i == 1)
plot(names(usa_cx), usa_cx, ylim = c(0, .17))
##
this_stan_cdr = sum(this_cx * sMx_80p[s])
usa_stan_cdr  = sum(usa_cx  * sMx_80p[s])
theta = usa_stan_cdr/this_stan_cdr
theta.vec[i] = theta
lines(names(this_cx), this_cx, col = i, lty = i)
}
## expos_ita = fread("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/ITA.Exposures_1x1.txt", na.string = ".")
theta.vec = rep(NA, length(code.vec))
names(theta.vec) = code.vec
for (i in 1:length(code.vec))
{
this_code = code.vec[i]
this_filename = paste0("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/", this_code, ".Exposures_1x1.txt")
this_dt = fread(this_filename, na.string = ".")
this_dt[, x := Age2x(Age)]
this_Kx = this_dt[Year == max(Year) & x >= 80]$Total
names(this_Kx) = this_dt[Year == max(Year) & x >= 80]$x
this_cx = prop.table(this_Kx[s])
##     s = names(this_Kx)
##
usa_cx = prop.table(usa_Kx_80p[s])
if(i == 1)
plot(names(usa_cx), usa_cx, ylim = c(0, .17))
##
this_stan_cdr = sum(this_cx * sMx_80p[s])
usa_stan_cdr  = sum(usa_cx  * sMx_80p[s])
theta = usa_stan_cdr/this_stan_cdr
theta.vec[i] = theta
lines(names(this_cx), this_cx, col = i, lty = i)
}
legend("topright", code.vec, col = seq(code.vec), lty = seq(code.vec))
## expos_ita = fread("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/ITA.Exposures_1x1.txt", na.string = ".")
theta.vec = rep(NA, length(code.vec))
names(theta.vec) = code.vec
for (i in 1:length(code.vec))
{
this_code = code.vec[i]
this_filename = paste0("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/", this_code, ".Exposures_1x1.txt")
this_dt = fread(this_filename, na.string = ".")
this_dt[, x := Age2x(Age)]
this_Kx = this_dt[Year == max(Year) & x >= 80]$Total
names(this_Kx) = this_dt[Year == max(Year) & x >= 80]$x
this_cx = prop.table(this_Kx[s])
##     s = names(this_Kx)
##
usa_cx = prop.table(usa_Kx_80p[s])
if(i == 1)
plot(names(usa_cx), usa_cx, ylim = c(0, .17))
##
this_stan_cdr = sum(this_cx * sMx_80p[s])
usa_stan_cdr  = sum(usa_cx  * sMx_80p[s])
theta = usa_stan_cdr/this_stan_cdr
theta.vec[i] = theta
lines(names(this_cx), this_cx, col = i, lty = i)
}
s = paste(80:99)
par(mfrow = c(1,1))
code.vec = c("GBRTENW", "FRATNP", "DEUTNP", "ITA", "KOR", "ESP", "USA")
## expos_ita = fread("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/ITA.Exposures_1x1.txt", na.string = ".")
theta.vec = rep(NA, length(code.vec))
names(theta.vec) = code.vec
for (i in 1:length(code.vec))
{
this_code = code.vec[i]
this_filename = paste0("../data/raw/hmd_exposures/", this_code, ".Exposures_1x1.txt")
this_dt = fread(this_filename, na.string = ".")
this_dt[, x := Age2x(Age)]
this_Kx = this_dt[Year == max(Year) & x >= 80]$Total
names(this_Kx) = this_dt[Year == max(Year) & x >= 80]$x
this_cx = prop.table(this_Kx[s])
##     s = names(this_Kx)
##
usa_cx = prop.table(usa_Kx_80p[s])
if(i == 1)
plot(names(usa_cx), usa_cx, ylim = c(0, .17))
##
this_stan_cdr = sum(this_cx * sMx_80p[s])
usa_stan_cdr  = sum(usa_cx  * sMx_80p[s])
theta = usa_stan_cdr/this_stan_cdr
theta.vec[i] = theta
lines(names(this_cx), this_cx, col = i, lty = i)
}
legend("topright", code.vec, col = seq(code.vec), lty = seq(code.vec))
lines(names(wuhan_Kx_80p), prop.table(wuhan_Kx_80p), type = "l", col = "red")
theta_all.vec = c(theta.vec, "WUHAN" = theta_wuhan)
theta_pretty = theta_all.vec
names(theta_pretty) = c("England", "France", "Germany",
"Italy", "Korea",   "Spain",
"USA", "Wuhan")
s = paste(80:99)
par(mfrow = c(1,1))
code.vec = c("GBRTENW", "FRATNP", "DEUTNP", "ITA", "KOR", "ESP", "USA")
## expos_ita = fread("~/Documents/hmd/hmd_statistics/exposures/Exposures_1x1/ITA.Exposures_1x1.txt", na.string = ".")
theta.vec = rep(NA, length(code.vec))
names(theta.vec) = code.vec
for (i in 1:length(code.vec))
{
this_code = code.vec[i]
this_filename = paste0("../data/raw/hmd_exposures/", this_code, ".Exposures_1x1.txt")
this_dt = fread(this_filename, na.string = ".")
this_dt[, x := Age2x(Age)]
this_Kx = this_dt[Year == max(Year) & x >= 80]$Total
names(this_Kx) = this_dt[Year == max(Year) & x >= 80]$x
this_cx = prop.table(this_Kx[s])
##     s = names(this_Kx)
##
usa_cx = prop.table(usa_Kx_80p[s])
if(i == 1)
plot(names(usa_cx), usa_cx, ylim = c(0, .17))
##
this_stan_cdr = sum(this_cx * sMx_80p[s])
usa_stan_cdr  = sum(usa_cx  * sMx_80p[s])
theta = usa_stan_cdr/this_stan_cdr
theta.vec[i] = theta
lines(names(this_cx), this_cx, col = i, lty = i)
}
legend("topright", code.vec, col = seq(code.vec), lty = seq(code.vec))
lines(names(wuhan_Kx_80p), prop.table(wuhan_Kx_80p), type = "l", col = "red")
theta_all.vec = c(theta.vec, "WUHAN" = theta_wuhan)
theta_pretty = theta_all.vec
names(theta_pretty) = c("England", "France", "Germany",
"Italy", "Korea",   "Spain",
"USA", "Wuhan")
theta_all.vec
theta_pretty = theta_all.vec
names(theta_pretty) = c("England", "France", "Germany",
"Italy", "Korea",   "Spain",
"USA", "Wuhan")
theta_pretty
sort(round(theta_pretty, 3))
source('~/Documents/workspace/dempersp_covid_mortality/progs/age_structure_adjustment.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/age_structure_adjustment.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/age_structure_adjustment.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/age_structure_adjustment.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/age_structure_adjustment.R', echo=TRUE)
library(data.table)
dt = fread("../data/cleaned/harmonize_covid_deaths.csv")
nDx_prop = dt[Country == "USA", prop.table(nDx)]
names(nDx_prop) = dt[Country == "USA"]$x
print("Proportion deaths over age 70")
print(sum(nDx_prop[c("70", "80")]))
tmp = dt[, .("b" = log(nMx[x == 80]/ nMx[x == 40])/40 ),
by = Country]
print("Gompertz slopes from 40-49 group to 80+ group")
print(tmp[, .(Country, b = round(b, 3))])
code.vec = c("GBRTENW", "FRATNP", "DEUTNP", "ITA", "KOR", "ESP", "USA")
result.mat = matrix(NA, length(code.vec), 2)
rownames(result.mat) = code.vec
colnames(result.mat) = c("Year", "b")
for (i in 1:length(code.vec))
{
this_code = code.vec[i]
print(this_code)
this_file = paste0("../data/raw/hmd_life_tables/",
this_code, "_Mx_5x1.txt")
dt = fread(this_file, na.string = ".")
out = dt[Year == max(Year),
.("Year" =  max(Year),
"b" = log(Total[Age == "85-89"]/
Total[Age == "45-49"])/40 )]
result.mat[i,] = c("Year" = out$Year, "b" = round(out$b,3))
}
pdf("../text_and_figs/fig2_gompertz_scatter.pdf")
par(mfrow = c(1,1))
plot(result.mat[,"b"], tmp$b[-nrow(tmp)],
ylab = "Rate of increase with age from COVID-19 mortality",
xlab = "Rate of increase with age from all causes mortality",
xlim = c(.08, .12),
pch = 19,
ylim = c(.09, .13))
## text(result.mat[,"b"], tmp$b[-nrow(tmp)], rownames(result.mat),
##      pos = 3)
mypos = rep(1, nrow(result.mat))
names(mypos) = tmp$Country[-nrow(tmp)]
mypos["Spain"] = 3
mypos["Germany"] = 4
mypos["Korea"] = 1
myadj = rep(.5, length(mypos))
names(myadj) = names(mypos)
myadj["Spain"] = 0
text(result.mat[,"b"], tmp$b[-nrow(tmp)], tmp$Country[-nrow(tmp)],
pos = mypos)
dev.off()
system("open ../text_and_figs/fig2_gompertz_scatter.pdf")
beta = .1
million = 10^6
source('~/Documents/workspace/dempersp_covid_mortality/progs/calculations_for_text.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/calculations_for_text.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/calculations_for_text.R', echo=TRUE)
dt = fread("../data/raw/USA.Mx_1x1.txt")
dt[Age == "110+", Age := 110]
dt[, x := as.numeric(Age)]
dt[Year == 2017, plot(x, Male/Female)]
abline(h = seq(1, 2, .25), col = "grey")
points(c(45, 60, 70, 80, 90),
c(1.44, 1.37, 1.34, 1.26, 1.12),
pch = 19)
source('~/Documents/workspace/dempersp_covid_mortality/progs/get_cohort_ex_period_2020.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/get_open_age_group_adjustments.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/get_open_age_group_adjustments.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/get_open_age_group_adjustments.R', echo=TRUE)
theta_all.vec = c(theta.vec, "WUHAN" = theta_wuhan)
theta_pretty = theta_all.vec
names_old = names(theta_all.vec)
names_new = rep(NA, length(names_old))
names_new[names_old == "GBRTENW"] <- "England"
names_new[names_old == "FRATNP"] <- "France"
names_new[names_old == "DEUTNP"] <- "Germany"
names_new[names_old == "ITA"] <- "Italy"
names_new[names_old == "KOR"] <- "Korea"
names_new[names_old == "ESP"] <- "Spain"
names_new[names_old == "USA"] <- "USA"
names_new[names_old == "WUHAN"] <- "Wuhan"
names(theta_pretty) = names_new
source('~/Documents/workspace/dempersp_covid_mortality/progs/get_open_age_group_adjustments.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/gomp_simu.R', echo=TRUE)
source('~/Documents/workspace/dempersp_covid_mortality/progs/harmonize_covid_deaths.R', echo=TRUE)
expos_usa = fread("../data/raw/hmd_exposures/USA.Exposures_1x1.txt")
expos_usa[, x := Age2x(Age)]
expos_usa[, x10 := cut(x, c(age10, max_age), include.lowest = TRUE, right = FALSE)]
nKx10 = expos_usa[Year == 2017, xtabs(Total ~ x10)]
## now let's put back into "dt" (this is a bit ugly)
usa_tmp.dt = data.table(Country = "USA10",
x = seq(0, 80, 10),
n = NA,
nDx = nDx10.hat,
nKx = unclass(nKx10))
dt = rbind(dt, usa_tmp.dt)
dt[, sum(nKx), by = Country]
## 7:          USA 327167434
## 8:        Wuhan   8535001
## 9:        USA10 325109738
## missing 2 million people, maybe because of date? (Yes, INED has 2018)
dt[, sum(nDx), by = Country]
## deaths match
## 7:          USA 67790
## 9:        USA10 67790
## no
dt = dt[Country != "USA"]
dt[Country == "USA10", Country := "USA"]
## now fix the other countries so we have 80+ as open interval for everyone
age10 = seq(0, 80, 10)
max_age = 199
dt[, x10 := cut(x, c(age10, max_age), include.lowest = TRUE, right = FALSE)]
nDx.mat = dt[, xtabs(nDx ~ x10 + Country)]
nKx.mat = dt[, xtabs(nKx ~ x10 + Country)]
nDx.dt = as.data.table(nDx.mat)
setnames(x = nDx.dt, old = "N", new = "nDx")
nKx.dt = as.data.table(nKx.mat)
setnames(x = nKx.dt, old = "N", new = "nKx")
dt10 = merge(nDx.dt, nKx.dt, by = c("Country", "x10"))
dt10[, nMx := nDx/nKx]
## clean age labels
dt10[, x := gsub("\\[", "", x10)]
dt10[, x := gsub(",.*$", "", x)]
dt10[, x10 := NULL]
fwrite(dt10, "../data/cleaned/harmonize_covid_deaths.csv")
source('~/Documents/workspace/dempersp_covid_mortality/progs/harmonize_covid_deaths.R', echo=TRUE)
